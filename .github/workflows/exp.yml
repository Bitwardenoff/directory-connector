name: Exp

on:
  push:
    branches-ignore:
      - 'l10n_master'


jobs:
  windows_cli:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Windows builder
        run: |
          choco install checksum --no-progress
          choco install reshack --no-progress

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Set PACKAGE_VERSION & VER_INFO
        run: |
          $env:pkgVersion = (Get-Content -Raw -Path .\src\package.json | ConvertFrom-Json).version
          echo "PACKAGE_VERSION=$env:pkgVersion" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "WIN_PKG=$env:WIN_PKG" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "version: $env:pkgVersion"
        env:
          WIN_PKG: C:\Users\runneradmin\.pkg-cache\v2.5\fetched-v10.4.1-win-x64

      - name: get pkg-fetch
        shell: pwsh
        run: |
          cd $HOME
          $fetchedUrl = "https://github.com/vercel/pkg-fetch/releases/download/v2.5/uploaded-v2.5-node-v10.4.1-win-x64"

          New-Item -ItemType directory -Path .\.pkg-cache
          New-Item -ItemType directory -Path .\.pkg-cache\v2.5
          Invoke-RestMethod -Uri $fetchedUrl -OutFile "$env:WIN_PKG"
        env:
          WIN_PKG: C:\Users\runneradmin\.pkg-cache\v2.5\fetched-v10.4.1-win-x64

      - name: stop gap
        run: exit 1

      - name: Keytar
        shell: pwsh
        run: |
          $keytarVersion = (Get-Content -Raw -Path .\src\package.json | ConvertFrom-Json).dependencies.keytar
          $nodeModVersion = node -e "console.log(process.config.variables.node_module_version)"
          $keytarTar = "keytar-v${keytarVersion}-node-v${nodeModVersion}-{0}-x64.tar"
          $keytarTarGz = "${keytarTar}.gz"
          $keytarUrl = "https://github.com/atom/node-keytar/releases/download/v${keytarVersion}/${keytarTarGz}"

          New-Item -ItemType directory -Path .\keytar\macos | Out-Null
          New-Item -ItemType directory -Path .\keytar\linux | Out-Null
          New-Item -ItemType directory -Path .\keytar\windows | Out-Null

          Invoke-RestMethod -Uri $($keytarUrl -f "darwin") -OutFile ".\keytar\macos\$($keytarTarGz -f "darwin")"
          Invoke-RestMethod -Uri $($keytarUrl -f "linux") -OutFile ".\keytar\linux\$($keytarTarGz -f "linux")"
          Invoke-RestMethod -Uri $($keytarUrl -f "win32") -OutFile ".\keytar\windows\$($keytarTarGz -f "win32")"

          7z e ".\keytar\macos\$($keytarTarGz -f "darwin")" -o".\keytar\macos"
          7z e ".\keytar\linux\$($keytarTarGz -f "linux")" -o".\keytar\linux"
          7z e ".\keytar\windows\$($keytarTarGz -f "win32")" -o".\keytar\windows"

          7z e ".\keytar\macos\$($keytarTar -f "darwin")" -o".\keytar\macos"
          7z e ".\keytar\linux\$($keytarTar -f "linux")" -o".\keytar\linux"
          7z e ".\keytar\windows\$($keytarTar -f "win32")" -o".\keytar\windows"

      - name: Setup Version Info
        shell: pwsh
        run: .\scripts\make-versioninfo.ps1

      - name: Resource Hacker
        shell: cmd
        run: |
          set PATH=%PATH%;C:\Program Files (x86)\Resource Hacker
          ResourceHacker -open %WIN_PKG% -save %WIN_PKG% -action delete -mask ICONGROUP,1,
          ResourceHacker -open version-info.rc -save version-info.res -action compile
          ResourceHacker -open %WIN_PKG% -save %WIN_PKG% -action addoverwrite -resource version-info.res

      - name: Install
        run: npm install

      - name: Package CLI
        run: npm run dist:cli

      - name: Zip
        shell: cmd
        run: |
          7z a ./dist-cli/bwdc-windows-%PACKAGE_VERSION%.zip ./dist-cli/windows/bwdc.exe ./keytar/windows/keytar.node
          7z a ./dist-cli/bwdc-macos-%PACKAGE_VERSION%.zip ./dist-cli/macos/bwdc ./keytar/macos/keytar.node
          7z a ./dist-cli/bwdc-linux-%PACKAGE_VERSION%.zip ./dist-cli/linux/bwdc ./keytar/linux/keytar.node

      - name: Version Test
        run: |
          Expand-Archive -Path "./dist-cli/bwdc-windows-${env:PACKAGE_VERSION}.zip" -DestinationPath "./test/windows"
          $testVersion = Invoke-Expression '& ./test/windows/bwdc.exe -v'
          echo "version: $env:PACKAGE_VERSION"
          echo "testVersion: $testVersion"
          if($testVersion -ne $env:PACKAGE_VERSION) {
            Throw "Version test failed."
          }

      - name: Create checksums
        run: |
          checksum -f="./dist-cli/bwdc-windows-${env:PACKAGE_VERSION}.zip" `
            -t sha256 | Out-File ./dist-cli/bwdc-windows-sha256-${env:PACKAGE_VERSION}.txt
          checksum -f="./dist-cli/bwdc-macos-${env:PACKAGE_VERSION}.zip" `
            -t sha256 | Out-File ./dist-cli/bwdc-macos-sha256-${env:PACKAGE_VERSION}.txt
          checksum -f="./dist-cli/bwdc-linux-${env:PACKAGE_VERSION}.zip" `
            -t sha256 | Out-File ./dist-cli/bwdc-linux-sha256-${env:PACKAGE_VERSION}.txt

      - name: Publish windows zip to GitHub
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: bwdc-windows-${{ env.PACKAGE_VERSION }}.zip
          path: ./dist-cli/bwdc-windows-${{ env.PACKAGE_VERSION }}.zip

      - name: Publish mac zip to GitHub
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: bwdc-macos-${{ env.PACKAGE_VERSION }}.zip
          path: ./dist-cli/bwdc-macos-${{ env.PACKAGE_VERSION }}.zip

      - name: Publish linux zip to GitHub
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: bwdc-linux-${{ env.PACKAGE_VERSION }}.zip
          path: ./dist-cli/bwdc-linux-${{ env.PACKAGE_VERSION }}.zip

      - name: Publish windows checksum to GitHub
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: bwdc-windows-sha256-${{ env.PACKAGE_VERSION }}.txt
          path: ./dist-cli/bwdc-windows-sha256-${{ env.PACKAGE_VERSION }}.txt

      - name: Publish mac checksum to GitHub
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: bwdc-macos-sha256-${{ env.PACKAGE_VERSION }}.txt
          path: ./dist-cli/bwdc-macos-sha256-${{ env.PACKAGE_VERSION }}.txt

      - name: Publish linux checksum to GitHub
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: bwdc-linux-sha256-${{ env.PACKAGE_VERSION }}.txt
          path: ./dist-cli/bwdc-linux-sha256-${{ env.PACKAGE_VERSION }}.txt
